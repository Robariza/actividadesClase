/* IMPORTACIONES */

/* VARIABLES */
:root{
    --colorClaro: lightsalmon;
    --colorFondo: beige;
    --colorEnfasis: rgb(40, 124, 124);
    --tipografia: 'Arial Narrow', 'Arial', 'sans-serif';
}

/* CONDICIONES INICIALES */
*{
    /* padding-> borde interno -> garantiza iniciar con las dimensiones de padding en los elementos */
    padding: 0; 
    margin: 0;
    box-sizing: border-box;
}

/* BODY */
body{
    background-color: var(--colorFondo);
    font-family: var(--tipografia);
    font-size: 25px;
    overflow-x: hidden;
}

/* HEADER */
header{
    border: solid 5px red;
    /* vw-> viewport width (ancho de cualquier pantalla en porcentaje)*/
    width: 100vw; 
    /* vh-> viewport height (altura de cualquier pantalla en porcentaje)*/
    height: 100vh;
}

.titulo{
    width: 100%;
    height: 150px;

    background-color: var(--colorEnfasis);
    /* otra forma de centrado para el contenido */
    display: grid;
    /* alinea los elementos tanto en x e y */
    place-content: center;
    color: var(--colorClaro);
}

.titulo:active{
    background-color: brown;
    color: chartreuse;
    transform: scale(1.2);
}


/* mi carrusel de imágenes */
/* contenedor general - es como un marco que me define qué se ve y qué no se ve */
.contenedor-slider{
    border: solid 5px var(--colorEnfasis);

    /* 
        Para responsive, no usar valores fijos como PX, Sino valores relativos, como % y vw -vh
    */
    width: 75%;
    height: 65vh;
    /* width: 70%;
    height: 65vh; */
    /* margin: auto -> centrar contenedores */
    margin: 100px auto;
    overflow-x: hidden;
}

/* contenedor directo, le especifico cómo se debe mover */
.slider{
    width: 100%;
    height: 100%;
    display: flex;
    /* nombre que se conecta con el keyframe */
    animation-name: deslizar;
     /*tiempo de duración  */
    animation-duration: 10s;
    /* cuantas veces queremos que se repita la animación */
    animation-iteration-count: infinite;
    /* forma en que queremos que se de el movimiento */
    animation-timing-function: ease-in-out;
    /* dirección de mi animación */
    animation-direction: alternate;
}

/* Vamos a poner a funcionar la animación */
/* 0% -> 50% -> 100%
    from -> to */

@keyframes deslizar {
    from{
        transform: translateX(0%);
        /* transform: scale(0.5); */
    }
    50%{
        transform: translateX(-150%);
        
    }
    to{
        transform: translateX(-300%);
        /* transform: scale(1.2); */
    }
}

/* @keyframes rotar {
    from{
        transform: rotate(0deg);
    }
    to{
        transform: rotate(-360deg);
    }
} */

/* @keyframes escala {
    
    from{
        transform: scale(0.4);
    }
    50%{
        transform: scale(1);
    }
    to{
        transform: scale(1.7);
    }
} */

.contenedor-slider img{
    /*  */
    /* flex: 1 0 100%; */
    height: 100%;
    width: 100%;
    
}

/* -------------MAIN------- */

main{
    display: flex;
    justify-content: center;
    
}
.contenido{
    border: solid 5px var(--colorEnfasis);
    width: 75%;
    height: auto;
    margin-bottom: 100px;
}

.tituloSecundario{
    text-align: center;
    padding: 25px;
}
.imgParrafo{
    display: flex;
    gap: 45px;
    align-items: center;
    padding: 15px;
}

/* Yo puedo llamar varios elementos de mi html, a los que les voy a aplicar los mismos estilod, sólo separándolos por , */
/* .imgParrafo img, 
.imgParrafo p {
    width: 50%;
    height: 100%;
} */

.imgParrafo img{
    width: 50%;
}

.imgParrafo p{
    width: 50%;
}

/* FOOTER */
footer{
    height: 150px;
    width: 100%;

    background-color: var(--colorEnfasis);
    /* otra forma de centrado para el contenido */
    display: grid;
    /* alinea los elementos tanto en x e y */
    place-content: center;
    color: var(--colorFondo);
}